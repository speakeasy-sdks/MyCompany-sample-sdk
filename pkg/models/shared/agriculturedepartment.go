// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AgricultureDepartment - Enum representing the different agriculture departments available for agriculture clients.<p>Members:</p><ul><li><i>None</i> - Unspecified</li><li><i>Finance</i> - Financial (Norsk: Finans)</li><li><i>Farming</i> - Farming (Norsk: Jordbruk)</li><li><i>Forestry</i> - Forestry (Norsk: Skogbruk)</li><li><i>FurAnimals</i> - Fur animals (Norsk: Pelsdyr)</li><li><i>OtherIndustries</i> - Other industries (Norsk: Andre n√¶ringer)</li><li><i>Private</i> - Private (Norsk: Privat)</li></ul>
type AgricultureDepartment string

const (
	AgricultureDepartmentNone            AgricultureDepartment = "None"
	AgricultureDepartmentFinance         AgricultureDepartment = "Finance"
	AgricultureDepartmentFarming         AgricultureDepartment = "Farming"
	AgricultureDepartmentForestry        AgricultureDepartment = "Forestry"
	AgricultureDepartmentFurAnimals      AgricultureDepartment = "FurAnimals"
	AgricultureDepartmentOtherIndustries AgricultureDepartment = "OtherIndustries"
	AgricultureDepartmentPrivate         AgricultureDepartment = "Private"
)

func (e AgricultureDepartment) ToPointer() *AgricultureDepartment {
	return &e
}

func (e *AgricultureDepartment) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "None":
		fallthrough
	case "Finance":
		fallthrough
	case "Farming":
		fallthrough
	case "Forestry":
		fallthrough
	case "FurAnimals":
		fallthrough
	case "OtherIndustries":
		fallthrough
	case "Private":
		*e = AgricultureDepartment(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AgricultureDepartment: %v", v)
	}
}
