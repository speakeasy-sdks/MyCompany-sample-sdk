// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// Months - Enum defining the months of a year.<p>Members:</p><ul><li><i>january</i> - January</li><li><i>february</i> - February</li><li><i>march</i> - March</li><li><i>april</i> - April</li><li><i>may</i> - May</li><li><i>june</i> - June</li><li><i>july</i> - July</li><li><i>august</i> - August</li><li><i>september</i> - September</li><li><i>october</i> - October</li><li><i>november</i> - November</li><li><i>december</i> - December</li></ul>
type Months string

const (
	MonthsJanuary   Months = "january"
	MonthsFebruary  Months = "february"
	MonthsMarch     Months = "march"
	MonthsApril     Months = "april"
	MonthsMay       Months = "may"
	MonthsJune      Months = "june"
	MonthsJuly      Months = "july"
	MonthsAugust    Months = "august"
	MonthsSeptember Months = "september"
	MonthsOctober   Months = "october"
	MonthsNovember  Months = "november"
	MonthsDecember  Months = "december"
)

func (e Months) ToPointer() *Months {
	return &e
}

func (e *Months) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "january":
		fallthrough
	case "february":
		fallthrough
	case "march":
		fallthrough
	case "april":
		fallthrough
	case "may":
		fallthrough
	case "june":
		fallthrough
	case "july":
		fallthrough
	case "august":
		fallthrough
	case "september":
		fallthrough
	case "october":
		fallthrough
	case "november":
		fallthrough
	case "december":
		*e = Months(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Months: %v", v)
	}
}
