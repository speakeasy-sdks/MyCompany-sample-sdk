// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// VatPeriodType - Enum defining the Value Added Tax (VAT) period on this client. The VAT period states how often VAT is reported to the government from this client.<p>Members:</p><ul><li><i>none</i> - No defined VAT period</li><li><i>weekly</i> - Every week</li><li><i>halfMonthly</i> - Half-Monthly</li><li><i>monthly</i> - Every month</li><li><i>biMonthly</i> - Every two months</li><li><i>yearly</i> - Once a year</li><li><i>halfYearly</i> - Twice a year</li><li><i>quarterly</i> - Four times a year</li></ul>
type VatPeriodType string

const (
	VatPeriodTypeNone        VatPeriodType = "none"
	VatPeriodTypeWeekly      VatPeriodType = "weekly"
	VatPeriodTypeHalfMonthly VatPeriodType = "halfMonthly"
	VatPeriodTypeMonthly     VatPeriodType = "monthly"
	VatPeriodTypeBiMonthly   VatPeriodType = "biMonthly"
	VatPeriodTypeYearly      VatPeriodType = "yearly"
	VatPeriodTypeHalfYearly  VatPeriodType = "halfYearly"
	VatPeriodTypeQuarterly   VatPeriodType = "quarterly"
)

func (e VatPeriodType) ToPointer() *VatPeriodType {
	return &e
}

func (e *VatPeriodType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "none":
		fallthrough
	case "weekly":
		fallthrough
	case "halfMonthly":
		fallthrough
	case "monthly":
		fallthrough
	case "biMonthly":
		fallthrough
	case "yearly":
		fallthrough
	case "halfYearly":
		fallthrough
	case "quarterly":
		*e = VatPeriodType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VatPeriodType: %v", v)
	}
}
